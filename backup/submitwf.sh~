#!/bin/bash

echo
echo "SUBMISSION PROCESS"
echo

HOME_DIR=`pwd`

CLUSTER_NAME=local-condor
CLUSTER_GRID_TYPE=gt2
CLUSTER_OUTPUT_DIR=$HOME_DIR/outputs
CLUSTER_WORK_DIR=$HOME_DIR/$CLUSTER_NAME
CLUSTER_HOSTNAME_PORT=localhost

PEGASUS_BIN=`pegasus-config --bin`

INPUTS_FILE=replica.data
PROPERTIES_FILE=pegasus.properties
SITES_FILE=sites.xml

if [ $# -lt 1 ]; then
    echo "Usage: $0 DAX_FILE [-input INPUT_FILES] [-exec EXEC_FILE]"
	exit 1
fi


echo -n "Checking pegasus binaries..."
if [ "x$PEGASUS_BIN" = "x" ]; then
    echo "NOT FOUND"
    exit 1
fi
echo "OK"

#TODO : may be change methods here
echo -n "Checking workflow ..."
if [ ! -f $1 ]; then
    echo "NOT FOUND"
    exit 1
fi

COMMAND=`pegasus-dax-validator $1 > /dev/null`
if [ "$?" -ne "0" ]; then
    echo "INCORRECT"
    exit 1
fi
echo "OK"


DAX_FILE=$1
HAS_INPUTS=false
HAS_EXEC=false
EXEC_FILE_NAME=""

shift 1

while [ "$1" != "" ]; do
					echo "looooooooop with $1"
    case "$1" in
        "-exec")
            shift 1
            EXEC_FILE_NAME=$1
            HAS_EXEC=true
            shift 1
        ;;
        "-input")
            shift 1
            if [ $# -gt 1 ]; then
                if [ -f $INPUTS_FILE ]; then
                    rm $INPUTS_FILE
                fi

				CONTINUE=true
				while $CONTINUE; do
					case $1 in
					    -* | "")
						    CONTINUE=false
						;;
						*)
                            HAS_INPUTS=true
                            cat >> $INPUTS_FILE <<EOF
$1 file://$HOME_DIR/$1 pool="$CLUSTER_NAME"
EOF
                            shift 1
						;;
                    esac
				done
            fi
        ;;
    esac
done

echo -n "Generating sites catalog..."
cat > $SITES_FILE <<EOF
<?xml version="1.0" encoding="UTF-8"?>                                                               
  <sitecatalog xmlns="http://pegasus.isi.edu/schema/sitecatalog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pegasus.isi.edu/schema/sitecatalog http://pegasus.isi.edu/schema/sc-3.0.xsd" version="3.0">
    <site handle="local" arch="x86" os="LINUX">
      <grid type="gt2" contact="localhost/jobmanager-fork" scheduler="Fork" jobtype="auxillary"/>
      <head-fs>
        <scratch>
          <shared>
            <file-server protocol="file" url="file://" mount-point="$HOME_DIR/outputs"/>
            <internal-mount-point mount-point="$HOME_DIR/outputs"/>
          </shared>
        </scratch>
        <storage>
          <shared>
            <file-server protocol="file" url="file://" mount-point="$HOME_DIR/outputs"/>
            <internal-mount-point mount-point="$HOME_DIR/outputs"/>
          </shared>
        </storage>
      </head-fs>
      <replica-catalog type="LRC" url="rlsn://dummyValue.url.edu" />
      <profile namespace="env" key="PEGASUS_HOME" >$PEGASUS_HOME</profile>
      <profile namespace="env" key="GLOBUS_TCP_PORT_RANGE">40000,50000</profile>
    </site>

    <site handle="$CLUSTER_NAME" arch="x86" os="LINUX">
      <grid  type="$CLUSTER_GRID_TYPE" contact="$CLUSTER_HOSTNAME_PORT/jobmanager-fork" scheduler="Fork" jobtype="auxillary"/>
      <head-fs>
        <scratch>
          <shared>
            <file-server protocol="file" url="file://" mount-point="$CLUSTER_WORK_DIR/outputs"/>
            <internal-mount-point mount-point="$CLUSTER_WORK_DIR/outputs"/>
          </shared>
        </scratch>
      <storage>
        <shared>
          <file-server protocol="file" url="file://" mount-point="$CLUSTER_WORK_DIR/outputs"/>
          <internal-mount-point mount-point="$CLUSTER_WORK_DIR/outputs"/>
        </shared>
      </storage>
    </head-fs>
    <replica-catalog  type="LRC" url="rlsn://dummyValue.url.edu" />

    <profile namespace="env" key="PEGASUS_HOME" >$PEGASUS_BIN</profile>
    <profile namespace="env" key="GLOBUS_TCP_PORT_RANGE" >40000,50000</profile>
    <profile namespace="pegasus" key="style">condor</profile>
    <profile namespace="condor" key="universe">vanilla</profile>
  </site>
</sitecatalog>
EOF
echo "FINISH"

echo -n "Generating properties file..."
cat > $PROPERTIES_FILE<<EOF
pegasus.catalog.site=XML3
pegasus.catalog.site.file=$SITES_FILE
pegasus.data.configuration=condirio
EOF

if $HAS_INPUTS ; then
    cat >> $PROPERTIES_FILE<<EOF
pegasus.catalog.replica=SimpleFile
pegasus.catalog.replica.file=$INPUTS_FILE
EOF
fi

if $HAS_EXEC ; then
    cat >> $PROPERTIES_FILE<<EOF
pegasus.catalog.transformation=Text
pegasus.catalog.transformation.file=$EXEC_FILE_NAME
EOF
fi
echo "FINISH"

echo
echo
echo "Planning and submitting the workflow..."
pegasus-plan \
    --conf $PROPERTIES_FILE \
    --sites $CLUSTER_NAME \
    --dir work \
    --output $CLUSTER_NAME \
    --dax $DAX_FILE \
    --submit


